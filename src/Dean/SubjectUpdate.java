package Dean;

import Admin.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author Jaden
 */
public class SubjectUpdate extends javax.swing.JFrame {

    /**
     * Creates new form AdminAdd
     */
    final String DB_URL = "jdbc:sqlserver://localhost\\DESKTOP-FT3D7QK:1433;databaseName=enrollment;encrypt=true;trustServerCertificate=true";
    final String USERNAME = "admin";
    final String PASSWORD = "admin";
    String subjectCode, subjectTitle, schedule, lectureText, labText, creditText;
    static String subjectCodeToUpdate;
    int lecture, lab, credit;
    static int accountId;

    public SubjectUpdate(String subjectCodeToUpdate) {
        initComponents();
        this.subjectCodeToUpdate = subjectCodeToUpdate;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        tfSubjectCode = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tfSubjectTitle = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        tfLecture = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        tfLab = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        tfCredit = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tfSchedule = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Update Subject");
        setAlwaysOnTop(true);
        setIconImage(getIconImage());
        setResizable(false);

        jLabel1.setText("Subject Code");

        jLabel2.setText("Subject Title");

        jLabel5.setText("Lecture");

        jLabel6.setText("Lab");

        jLabel7.setText("Credit");

        jLabel3.setText("Schedule");

        btnUpdate.setText("ADD");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(67, 67, 67)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tfSubjectCode, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addComponent(tfSubjectTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel5)
                        .addGap(12, 12, 12)
                        .addComponent(jLabel6)
                        .addGap(31, 31, 31)
                        .addComponent(jLabel7)
                        .addGap(38, 38, 38)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(tfLecture, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(tfLab, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(tfCredit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(tfSchedule, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfSubjectCode, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfSubjectTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfLecture, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfLab, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfCredit, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfSchedule, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(68, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        subjectCode = tfSubjectCode.getText();
        subjectTitle = tfSubjectTitle.getText();
        schedule = tfSchedule.getText();
        lectureText = tfLecture.getText();
        labText = tfLab.getText();
        creditText = tfCredit.getText();

        try {
            Connection conn = DriverManager.getConnection(DB_URL, USERNAME, PASSWORD);

            StringBuilder sqlUpdateSubject = new StringBuilder("update COURSE_SUBJECT set ");
            boolean hasUpdates = false;

            if (!subjectCode.isBlank()) {
                sqlUpdateSubject.append("SubjectCode = ?, ");
                hasUpdates = true;
            }
            if (!subjectTitle.isBlank()) {
                sqlUpdateSubject.append("SubjectTitle = ?, ");
                hasUpdates = true;
            }
            if (!schedule.isBlank()) {
                sqlUpdateSubject.append("Schedule = ?, ");
                hasUpdates = true;
            }
            if (!lectureText.isBlank()) {
                sqlUpdateSubject.append("Lecture = ?, ");
                hasUpdates = true;
            }
            if (!labText.isBlank()) {
                sqlUpdateSubject.append("Lab = ?, ");
                hasUpdates = true;
            }
            if (!creditText.isBlank()) {
                sqlUpdateSubject.append("Credit = ?, ");
                hasUpdates = true;
            }

            if (hasUpdates) {
                sqlUpdateSubject.delete(sqlUpdateSubject.length() - 2, sqlUpdateSubject.length());
                sqlUpdateSubject.append(" where SubjectCode = ?");

                PreparedStatement preparedStatementUpdateSubject = conn.prepareStatement(sqlUpdateSubject.toString());

                int parameterIndex = 1;
                if (!subjectCode.isBlank()) {
                    preparedStatementUpdateSubject.setString(parameterIndex++, subjectCode);
                }
                if (!subjectTitle.isBlank()) {
                    preparedStatementUpdateSubject.setString(parameterIndex++, subjectTitle);
                }
                if (!schedule.isBlank()) {
                    preparedStatementUpdateSubject.setString(parameterIndex++, schedule);
                }
                if (!lectureText.isBlank()) {
                    preparedStatementUpdateSubject.setString(parameterIndex++, lectureText);
                }
                if (!labText.isBlank()) {
                    preparedStatementUpdateSubject.setString(parameterIndex++, labText);
                }
                if (!creditText.isBlank()) {
                    preparedStatementUpdateSubject.setString(parameterIndex++, creditText);
                }
                preparedStatementUpdateSubject.setString(parameterIndex++, subjectCodeToUpdate);

                int rowsUpdated = preparedStatementUpdateSubject.executeUpdate();
                if (rowsUpdated > 0) {
                    System.out.println("Rows affected: " + rowsUpdated);
                    JOptionPane.showMessageDialog(this, "Successfully updated subject");
                } else {
                    JOptionPane.showMessageDialog(this, "No rows updated");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Nothing updated");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
        this.dispose();

    }//GEN-LAST:event_btnUpdateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SubjectUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SubjectUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SubjectUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SubjectUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SubjectUpdate(subjectCodeToUpdate).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField tfCredit;
    private javax.swing.JTextField tfLab;
    private javax.swing.JTextField tfLecture;
    private javax.swing.JTextField tfSchedule;
    private javax.swing.JTextField tfSubjectCode;
    private javax.swing.JTextField tfSubjectTitle;
    // End of variables declaration//GEN-END:variables
}
