package Admin;

import Admin.AdminFunctions.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author Jaden
 */
public class StudentUpdate extends javax.swing.JFrame {

    /**
     * Creates new form AdminAdd
     */
    final String DB_URL = "jdbc:sqlserver://localhost\\DESKTOP-FT3D7QK:1433;databaseName=enrollment;encrypt=true;trustServerCertificate=true";
    final String USERNAME = "admin";
    final String PASSWORD = "admin";
    String firstName, middleName, lastName, section, enrollmentStatus, campus, courseId;
    int yearLevel;
    static int studentId;

    public StudentUpdate(int studentId) {
        initComponents();
        this.studentId = studentId;

        /*try {
            Connection conn = DriverManager.getConnection(DB_URL, USERNAME, PASSWORD);

            String sqlId = "select StudID from STUDENT where UserID = ?";
            PreparedStatement preparedStatementId = conn.prepareStatement(sqlId);
            preparedStatementId.setInt(1, userId);

            ResultSet resultSetId = preparedStatementId.executeQuery();
            if(resultSetId.next()){
                studentId = resultSetId.getInt("StudID");
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }*/
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        tfFirstName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        tfMiddleName = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        tfLastName = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        cbYearLevel = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        cbSection = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        cbEnrollmentStatus = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        cbCampus = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        cbCourse = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconImage(getIconImage());
        setResizable(false);

        jButton1.setText("UPDATE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel5.setText("First Name");

        jLabel6.setText("Middle Name");

        jLabel7.setText("Last Name");

        jLabel9.setText("YearLevel");

        cbYearLevel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--", "1", "2", "3", "4" }));

        jLabel10.setText("Section");

        cbSection.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--", "A", "B", "C", "D" }));

        jLabel11.setText("Enrollment Status");

        cbEnrollmentStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--", "unenrolled", "enrolled" }));

        jLabel12.setText("Campus");

        cbCampus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--", "Bulacan State University - BulSU - Main Campus", "Bustos", "Hagonoy", "Meneses", "San Rafael", "Sarmiento" }));

        jLabel8.setText("Course ID");

        cbCourse.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(99, 99, 99)
                                .addComponent(jLabel6))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(tfFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(36, 36, 36)
                                        .addComponent(tfMiddleName, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel9)
                                            .addComponent(cbYearLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(36, 36, 36)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel10)
                                            .addComponent(cbSection, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jLabel12))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel7)
                                    .addComponent(tfLastName)
                                    .addComponent(cbEnrollmentStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(cbCampus, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(163, 163, 163)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbCourse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(71, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfMiddleName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(4, 4, 4)
                        .addComponent(cbYearLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10))
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbEnrollmentStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbSection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12)
                .addGap(4, 4, 4)
                .addComponent(cbCampus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addGap(5, 5, 5)
                .addComponent(cbCourse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        firstName = tfFirstName.getText();
        middleName = tfMiddleName.getText();
        lastName = tfLastName.getText();

        String yearLevelText = (String) cbYearLevel.getSelectedItem();
        if (!yearLevelText.equalsIgnoreCase("--")) {
            yearLevel = Integer.parseInt(yearLevelText);
        } else {
            yearLevel = 0;
        }

        section = (String) cbSection.getSelectedItem();
        enrollmentStatus = (String) cbEnrollmentStatus.getSelectedItem();
        campus = (String) cbCampus.getSelectedItem();
        courseId = (String) cbCourse.getSelectedItem();

        try {
            Connection conn = DriverManager.getConnection(DB_URL, USERNAME, PASSWORD);

            if (enrollmentStatus.equalsIgnoreCase("unenrolled") && !section.equalsIgnoreCase("--") && !campus.equalsIgnoreCase("--")
                    && yearLevel > 0 && !campus.equalsIgnoreCase("--")) {
                JOptionPane.showMessageDialog(this, "Student is unenrolled");
                return;
            } else if (enrollmentStatus.equalsIgnoreCase("enrolled") && section.equalsIgnoreCase("--") && campus.equalsIgnoreCase("--")) {
                JOptionPane.showMessageDialog(this, "Please choose a yearlevel, section, and campus");
                return;
            } else if (enrollmentStatus.equalsIgnoreCase("enrolled") && section.equalsIgnoreCase("--")) {
                JOptionPane.showMessageDialog(this, "Please choose a section");
                return;
            } else if (enrollmentStatus.equalsIgnoreCase("enrolled") && campus.equalsIgnoreCase("--")) {
                JOptionPane.showMessageDialog(this, "Please choose a campus");
                return;
            } else if (enrollmentStatus.equalsIgnoreCase("unenrolled") && !section.equalsIgnoreCase("--") && !campus.equalsIgnoreCase("--")) {
                JOptionPane.showMessageDialog(this, "Student is unenrolled");
                return;
            }

            StringBuilder sqlUpdateStudent = new StringBuilder("update STUDENT set ");

            boolean valuesUpdated = false;

            if (!firstName.isBlank()) {
                sqlUpdateStudent.append("FName = ?, ");
                valuesUpdated = true;
            }
            if (!middleName.isBlank()) {
                sqlUpdateStudent.append("MName = ?, ");
                valuesUpdated = true;
            }
            if (!lastName.isBlank()) {
                sqlUpdateStudent.append("LName = ?, ");
                valuesUpdated = true;
            }
            if (yearLevel != 0) {
                sqlUpdateStudent.append("YearLevel = ?, ");
                valuesUpdated = true;
            }
            if (!section.equalsIgnoreCase("--")) {
                sqlUpdateStudent.append("Section = ?, ");
                valuesUpdated = true;
            }
            if (!enrollmentStatus.equalsIgnoreCase("--")) {
                sqlUpdateStudent.append("EnrollmentStatus = ?, ");
                valuesUpdated = true;
            }
            if (!campus.equalsIgnoreCase("--")) {
                sqlUpdateStudent.append("Campus = ?, ");
                valuesUpdated = true;
            }
            if (!courseId.equalsIgnoreCase("--")) {
                sqlUpdateStudent.append("CourseID = ?, ");
                valuesUpdated = true;
            }

            if (valuesUpdated) {
                if (sqlUpdateStudent.lastIndexOf(", ") == sqlUpdateStudent.length() - 2) {
                    sqlUpdateStudent.delete(sqlUpdateStudent.length() - 2, sqlUpdateStudent.length());
                }
                sqlUpdateStudent.append(" where StudID = ?");

                PreparedStatement preparedStatementUpdateStudent = conn.prepareStatement(sqlUpdateStudent.toString());

                int parameterIndex = 1;
                if (!firstName.isBlank()) {
                    preparedStatementUpdateStudent.setString(parameterIndex++, firstName);
                }
                if (!middleName.isBlank()) {
                    preparedStatementUpdateStudent.setString(parameterIndex++, middleName);
                }
                if (!lastName.isBlank()) {
                    preparedStatementUpdateStudent.setString(parameterIndex++, lastName);
                }
                if (yearLevel != 0) {
                    preparedStatementUpdateStudent.setInt(parameterIndex++, yearLevel);
                }
                if (!section.equalsIgnoreCase("--")) {
                    preparedStatementUpdateStudent.setString(parameterIndex++, section);
                }
                if (!enrollmentStatus.equalsIgnoreCase("--")) {
                    preparedStatementUpdateStudent.setString(parameterIndex++, enrollmentStatus);
                }
                if (!campus.equalsIgnoreCase("--")) {
                    preparedStatementUpdateStudent.setString(parameterIndex++, campus);
                }
                if (!courseId.equalsIgnoreCase("--")) {
                    preparedStatementUpdateStudent.setString(parameterIndex++, courseId);
                }
                preparedStatementUpdateStudent.setInt(parameterIndex++, studentId);

                int rowsUpdated = preparedStatementUpdateStudent.executeUpdate();
                if (rowsUpdated > 0) {
                    System.out.println("Rows affected: " + rowsUpdated);
                    JOptionPane.showMessageDialog(this, "Successfully updated.");
                } else {
                    JOptionPane.showMessageDialog(this, "No rows updated.");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Nothing updated");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentUpdate(studentId).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbCampus;
    private javax.swing.JComboBox<String> cbCourse;
    private javax.swing.JComboBox<String> cbEnrollmentStatus;
    private javax.swing.JComboBox<String> cbSection;
    private javax.swing.JComboBox<String> cbYearLevel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField tfFirstName;
    private javax.swing.JTextField tfLastName;
    private javax.swing.JTextField tfMiddleName;
    // End of variables declaration//GEN-END:variables
}
